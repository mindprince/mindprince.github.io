<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Rohit Agarwal's Notes]]></title>
  <link href="http://notes.mindprince.in/atom.xml" rel="self"/>
  <link href="http://notes.mindprince.in/"/>
  <updated>2013-06-19T01:42:20+05:30</updated>
  <id>http://notes.mindprince.in/</id>
  <author>
    <name><![CDATA[Rohit Agarwal]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sharing an internet connection from your computer to your mobile device]]></title>
    <link href="http://notes.mindprince.in/2013/06/19/sharing-an-internet-connection-from-your-computer-to-your-mobile-device.html"/>
    <updated>2013-06-19T00:13:00+05:30</updated>
    <id>http://notes.mindprince.in/2013/06/19/sharing-an-internet-connection-from-your-computer-to-your-mobile-device</id>
    <content type="html"><![CDATA[<p>Recently, I explored how to share an internet connection from computers running Windows or Mac OS X or Linux to mobile devices running iOS or Android.</p>

<p>Here&rsquo;s the summary:</p>

<p>Unrooted Android devices don&rsquo;t support ad-hoc mode (<a href="https://code.google.com/p/android/issues/detail?id=82">https://code.google.com/p/android/issues/detail?id=82</a>) i.e. they don&rsquo;t see ad-hoc WiFi networks.</p>

<p>iOS devices support ad-hoc mode i.e. they can see ad-hoc WiFi networks.</p>

<p>Now, if you are on a Mac and you want to share your internet connection, you follow the steps outlined here: <a href="http://support.apple.com/kb/PH3853">http://support.apple.com/kb/PH3853</a>, this creates a WiFi network in Infrastructure mode which is visible to both iOS and Android devices and you can access the internet on these devices using this network.</p>

<p>You can create an ad-hoc network on a Mac by following these steps: <a href="http://support.apple.com/kb/PH3771">http://support.apple.com/kb/PH3771</a>. But this network is not visible to unrooted Android devices and iOS devices were not able to access the internet even after connecting to this network. So, don&rsquo;t do this.</p>

<p>If you are on a PC (Windows 7 or later), you can use <a href="http://www.connectify.me/hotspot/">Connectify Hotspot</a> to create a hotspot in Access Point Mode which is visible to both Android and iOS devices and access the internet on these devices using this hotspot. However, if you are on Windows XP or Vista, your Connectify hotspot will operate in ad-hoc mode and will not work with unrooted Android devices [<a href="http://support.connectify.me/entries/20307637-Does-Connectify-Hotspot-run-on-Windows-Vista-or-Windows-XP-">1</a>] [<a href="http://support.connectify.me/entries/20316691-access-point-mode-vs-ad-hoc-mode">2</a>].</p>

<p>If you don&rsquo;t want to use Connectify Hotspot, you can create an ad-hoc network by following these steps: <a href="http://windows.microsoft.com/en-in/windows7/set-up-a-computer-to-computer-ad-hoc-network">http://windows.microsoft.com/en-in/windows7/set-up-a-computer-to-computer-ad-hoc-network</a>. This network is not visible to unrooted Android devices but is visible to iOS devices and they can access the internet using this network.</p>

<p>If you are on a PC running Ubuntu, you can create an ad-hoc network by going to the <code>Network</code> menu and then clicking <code>Create New Wireless Network</code>. This network is not visible to unrooted Android devices but is visible to iOS devices and they can access the internet using this network.</p>

<p>I don&rsquo;t know of a way to create a WiFi network on an Ubuntu machine which is visible to unrooted Android devices.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sparse matrix multiplication using SQL]]></title>
    <link href="http://notes.mindprince.in/2013/06/07/sparse-matrix-multiplication-using-sql.html"/>
    <updated>2013-06-07T21:57:00+05:30</updated>
    <id>http://notes.mindprince.in/2013/06/07/sparse-matrix-multiplication-using-sql</id>
    <content type="html"><![CDATA[<p><code>a</code> and <code>b</code> are two sparse matrices. We want to perform <code>a * b</code> as shown below:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>0   1   0   0   9                1   0   0                0   0   0
</span><span class='line'>0   0   3   0   0       \ /      0   0   0      -----     0  21   0
</span><span class='line'>0   0   0   2   0        *       0   7   0      -----     0   0   4
</span><span class='line'>0   0   0   0   0       / \      0   0   2                0   0   0
</span><span class='line'>                                 0   0   0</span></code></pre></td></tr></table></div></figure>


<p>We can represent a sparse matrix in a relational database as a table <code>matrix_name(row_num, col_num, value)</code>.
Each non-zero cell in the matrix is represnted as a record (i, j, value) in the table.</p>

<p>Here&rsquo;s how to do the multiplication. First, create the tables:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">a</span> <span class="p">(</span>
</span><span class='line'><span class="n">row_num</span> <span class="nb">INT</span><span class="p">,</span>
</span><span class='line'><span class="n">col_num</span> <span class="nb">INT</span><span class="p">,</span>
</span><span class='line'><span class="n">value</span> <span class="nb">INT</span><span class="p">,</span>
</span><span class='line'><span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="n">row_num</span><span class="p">,</span> <span class="n">col_num</span><span class="p">)</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">b</span> <span class="p">(</span>
</span><span class='line'><span class="n">row_num</span> <span class="nb">INT</span><span class="p">,</span>
</span><span class='line'><span class="n">col_num</span> <span class="nb">INT</span><span class="p">,</span>
</span><span class='line'><span class="n">value</span> <span class="nb">INT</span><span class="p">,</span>
</span><span class='line'><span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="n">row_num</span><span class="p">,</span> <span class="n">col_num</span><span class="p">)</span>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, insert values into the tables:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">a</span> <span class="k">VALUES</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">9</span><span class="p">),</span>
</span><span class='line'><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span>
</span><span class='line'><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">b</span> <span class="k">VALUES</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">7</span><span class="p">),</span>
</span><span class='line'><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, perform the multiplication using the following query:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">a</span><span class="p">.</span><span class="n">row_num</span><span class="p">,</span> <span class="n">b</span><span class="p">.</span><span class="n">col_num</span><span class="p">,</span> <span class="k">SUM</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">value</span><span class="o">*</span><span class="n">b</span><span class="p">.</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">a</span><span class="p">.</span><span class="n">col_num</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">row_num</span>
</span><span class='line'><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">a</span><span class="p">.</span><span class="n">row_num</span><span class="p">,</span> <span class="n">b</span><span class="p">.</span><span class="n">col_num</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="mi">2</span><span class="o">|</span><span class="mi">2</span><span class="o">|</span><span class="mi">21</span>
</span><span class='line'><span class="mi">3</span><span class="o">|</span><span class="mi">3</span><span class="o">|</span><span class="mi">4</span>
</span></code></pre></td></tr></table></div></figure>


<p>To see how this query works, remember the formula for cell (i,j) of the product. It is the sum of a(i,k)*b(k,j) for all k.
The <code>JOIN</code> condition <code>a.col_num = b.row_num</code> makes sure that both <code>a.value</code> and <code>b.value</code> has the same k.
The <code>GROUP BY</code> clause makes sure that we sum over all k&rsquo;s.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Search twitter from command-line]]></title>
    <link href="http://notes.mindprince.in/2013/06/06/search-twitter-from-command-line.html"/>
    <updated>2013-06-06T20:55:00+05:30</updated>
    <id>http://notes.mindprince.in/2013/06/06/search-twitter-from-command-line</id>
    <content type="html"><![CDATA[<p>Recently, I started learning the Twitter API.
Twitter has deprecated <a href="https://dev.twitter.com/docs/api/1">v1</a> of its API, and the <a href="https://dev.twitter.com/docs/api/1.1">v1.1</a> of its API requires the use of <code>OAuth</code>.</p>

<p>So, the first step is to download an <code>OAuth</code> library. I am going to use <a href="https://github.com/simplegeo/python-oauth2"><code>simplegeo/python-oauth2</code></a>.
You can download it from <a href="https://pypi.python.org/pypi/oauth2/">pypi</a> and install it by executing <code>sudo ./setup.py install</code>.</p>

<p>Here is a script which uses the API to search twitter from the terminal.</p>

<div><script src='https://gist.github.com/5722371.js?file=twitter_search.py'></script>
<noscript><pre><code>#! /usr/bin/env python

# Search Twitter from command-line
# Usage $ python twitter_search.py SEARCH TERMS

# This uses API v1.1

import sys
import json
import urllib
import oauth2 as oauth

consumer_key        = &quot;Enter Your Consumer Key Here.&quot;
consumer_secret     = &quot;Enter Your Consumer Secret Here&quot;

access_token_key    = &quot;Enter Your Access Token Here&quot;
access_token_secret = &quot;Enter Your Access Token Secret Here&quot;

# Let https://pypi.python.org/pypi/oauth2/ worry about oauth stuff.
def oauth_req(url):

    consumer    = oauth.Consumer(key=consumer_key, secret=consumer_secret)
    token       = oauth.Token(key=access_token_key, secret=access_token_secret)
    client      = oauth.Client(consumer, token)

    resp, content = client.request(url, method=&quot;GET&quot;)
    return content

def search(term):
    endpoint = &quot;https://api.twitter.com/1.1/search/tweets.json&quot;
    url = endpoint + &quot;?&quot; + urllib.urlencode({'q':term})
    search_results = oauth_req(url)
    search_results_dict = json.loads(search_results)
    for tweet in search_results_dict['statuses']:
        print tweet['user']['name'] + &quot;:&quot;
        print tweet['text']
        print

def main():
    search_term = &quot;&quot;
    for term in sys.argv[1:]:
        search_term = search_term + &quot; &quot; + term
    search(search_term)
    
if __name__ == '__main__':
    main()</code></pre></noscript></div>


<p>To use this script, you first need to create an application at <a href="https://dev.twitter.com/apps">https://dev.twitter.com/apps</a></p>

<p>You will get your <code>consumer_key</code> and <code>consumer_secret</code> from there.
You will also need to create an access token for your account.
After doing that you will get your <code>access_token_key</code> and <code>access_token_secret</code>.</p>

<p>Fill these four values in <code>twitter_search.py</code> and you are good to go.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python twitter_search.py SEARCH TERM<span class="o">(</span>S<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress and Github: WTF is going on with the branches?]]></title>
    <link href="http://notes.mindprince.in/2013/05/29/octopress-and-github-wtf-is-going-on-with-the-branches.html"/>
    <updated>2013-05-29T19:50:00+05:30</updated>
    <id>http://notes.mindprince.in/2013/05/29/octopress-and-github-wtf-is-going-on-with-the-branches</id>
    <content type="html"><![CDATA[<p>This blog is powered by Octopress and hosted using Github Pages.
When I checked the github repository for this blog, I found that there were two branches: <code>master</code> and <code>source</code>.
But locally there was only one: <code>source</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git branch
</span><span class='line'>* source</span></code></pre></td></tr></table></div></figure>


<p>To understand what was going on, I dug up the <a href="http://octopress.org/docs/deploying/github/">docs</a>.</p>

<p>Initially when you clone the octopress repo from <a href="https://github.com/imathis/octopress">imathis/octopress</a>, the local branch is called <code>master</code> and the remote <code>imathis/octopress</code> is called <code>origin</code>.</p>

<p>The <a href="https://github.com/imathis/octopress/blob/1bd2b62a80f3a7be330cb9600a2206a678e6863d/Rakefile#L315">magic</a> happens when you do <code>rake setup_github_pages</code>.</p>

<p>It renames the remote pointing to <code>imathis/octopress</code> from <code>origin</code> to <code>octopress</code>; adds your Github Pages repository as the default <code>origin</code> remote and renames the <code>master</code> branch to <code>source</code>.
It then creates a new directory <code>_deploy/</code> and initializes a new git repository there.
<em>Finally, it adds your Github Pages repository as the default <code>origin</code> remote for this new repository also.</em></p>

<p>Now, when you do <code>rake deploy</code>, the <code>master</code> branch of the git repo in <code>_deploy/</code> is pushed to the <code>master</code> branch of your Github Pages repo. And when you push the source repo to github, it becomes the <code>source</code> branch of your Github Pages repo.</p>

<p>Here are some more details:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd octopress/  # THE_DIRECTORY_WHERE_YOU_CLONED_OCTOPRESS
</span><span class='line'>$ git remote show origin
</span><span class='line'>* remote origin
</span><span class='line'>  Fetch URL: git@github.com:mindprince/mindprince.github.io.git
</span><span class='line'>  Push  URL: git@github.com:mindprince/mindprince.github.io.git
</span><span class='line'>  HEAD branch: master
</span><span class='line'>  Remote branches:
</span><span class='line'>    master new (next fetch will store in remotes/origin)
</span><span class='line'>    source tracked
</span><span class='line'>  Local ref configured for 'git push':
</span><span class='line'>    source pushes to source (up to date)</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd octopress/_deploy/
</span><span class='line'>$ git remote show origin
</span><span class='line'>* remote origin
</span><span class='line'>  Fetch URL: git@github.com:mindprince/mindprince.github.io.git
</span><span class='line'>  Push  URL: git@github.com:mindprince/mindprince.github.io.git
</span><span class='line'>  HEAD branch: master
</span><span class='line'>  Remote branches:
</span><span class='line'>    master tracked
</span><span class='line'>    source new (next fetch will store in remotes/origin)
</span><span class='line'>  Local ref configured for 'git push':
</span><span class='line'>    master pushes to master (up to date)</span></code></pre></td></tr></table></div></figure>


<p>To summarize, the two branches <code>source</code> and <code>master</code> on your Github Pages repo correspond to two separate git repositories: one in your <code>octopress/</code> directory and another in the <code>octopress/_deploy/</code> directory.</p>

<p>The fact that separate git repositories on your local machine can act as different branches of the same repository on github is interesting. It can probably be misused to host more than five private repositories in <a href="https://github.com/plans">Github&rsquo;s Micro plan</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing UnicodeDecodeError in Python]]></title>
    <link href="http://notes.mindprince.in/2013/05/28/fixing-unicodedecodeerror-in-python.html"/>
    <updated>2013-05-28T21:09:00+05:30</updated>
    <id>http://notes.mindprince.in/2013/05/28/fixing-unicodedecodeerror-in-python</id>
    <content type="html"><![CDATA[

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='pycon'><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="s">&quot;He said, “Hi, there.” She didn&#39;t reply.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span><span class='line'><span class="go">&lt;type &#39;str&#39;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span>
</span><span class='line'><span class="go">&quot;He said, \xe2\x80\x9cHi, there.\xe2\x80\x9d She didn&#39;t reply.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="k">print</span> <span class="n">a</span>
</span><span class='line'><span class="go">He said, “Hi, there.” She didn&#39;t reply.</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>a</code> is a string encoded in utf-8.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='pycon'><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">=</span> <span class="nb">unicode</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span><span class='line'><span class="gt">Traceback (most recent call last):</span>
</span><span class='line'>  File <span class="nb">&quot;&lt;stdin&gt;&quot;</span>, line <span class="m">1</span>, in <span class="n">&lt;module&gt;</span>
</span><span class='line'><span class="gr">UnicodeDecodeError</span>: <span class="n">&#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position 9: ordinal not in range(128)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This didn&rsquo;t work because the default encoding in python in ascii. So, python was not able to decode <code>a</code> assuming ascii encoding.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='pycon'><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">=</span> <span class="nb">unicode</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="s">&quot;utf-8&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="nb">type</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'><span class="go">&lt;type &#39;unicode&#39;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">b</span>
</span><span class='line'><span class="go">u&quot;He said, \u201cHi, there.\u201d She didn&#39;t reply.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="k">print</span> <span class="n">b</span>
</span><span class='line'><span class="go">He said, “Hi, there.” She didn&#39;t reply.</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>b</code> is not a string. It is a unicode object. I think it has no encoding. You can encode it in different encodings.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='pycon'><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">c</span> <span class="o">=</span> <span class="n">b</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;utf-8&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="nb">type</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span><span class='line'><span class="go">&lt;type &#39;str&#39;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">c</span>
</span><span class='line'><span class="go">&quot;He said, \xe2\x80\x9cHi, there.\xe2\x80\x9d She didn&#39;t reply.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="k">print</span> <span class="n">c</span>
</span><span class='line'><span class="go">He said, “Hi, there.” She didn&#39;t reply.</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>c</code> is now same as <code>a</code>. It is a string encoded in utf-8. We created it by encoding a unicode object.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='pycon'><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">d</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;utf-8&quot;</span><span class="p">)</span>
</span><span class='line'><span class="gt">Traceback (most recent call last):</span>
</span><span class='line'>  File <span class="nb">&quot;&lt;stdin&gt;&quot;</span>, line <span class="m">1</span>, in <span class="n">&lt;module&gt;</span>
</span><span class='line'><span class="gr">UnicodeDecodeError</span>: <span class="n">&#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position 9: ordinal not in range(128)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>a</code> is already encoded in utf-8. What happens here is that python first tries to decode <code>a</code> and then encode <code>a</code>. But decoding <code>a</code> fails because default encoding is assume to be ascii.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='pycon'><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">e</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">&quot;utf-8&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="nb">type</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="go">&lt;type &#39;unicode&#39;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">e</span>
</span><span class='line'><span class="go">u&quot;He said, \u201cHi, there.\u201d She didn&#39;t reply.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="k">print</span> <span class="n">e</span>
</span><span class='line'><span class="go">He said, “Hi, there.” She didn&#39;t reply.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, <code>e</code> is same as <code>b</code>. It is a unicode object.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='pycon'><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">f</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">&quot;ascii&quot;</span><span class="p">)</span>
</span><span class='line'><span class="gt">Traceback (most recent call last):</span>
</span><span class='line'>  File <span class="nb">&quot;&lt;stdin&gt;&quot;</span>, line <span class="m">1</span>, in <span class="n">&lt;module&gt;</span>
</span><span class='line'><span class="gr">UnicodeDecodeError</span>: <span class="n">&#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position 9: ordinal not in range(128)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Just to show what we have been saying earlier.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='pycon'><span class='line'><span class="gp">&gt;&gt;&gt; </span><span class="n">g</span> <span class="o">=</span> <span class="n">b</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;ascii&quot;</span><span class="p">)</span>
</span><span class='line'><span class="gt">Traceback (most recent call last):</span>
</span><span class='line'>  File <span class="nb">&quot;&lt;stdin&gt;&quot;</span>, line <span class="m">1</span>, in <span class="n">&lt;module&gt;</span>
</span><span class='line'><span class="gr">UnicodeEncodeError</span>: <span class="n">&#39;ascii&#39; codec can&#39;t encode character u&#39;\u201c&#39; in position 9: ordinal not in range(128)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note this is an <code>UnicodeEncodeError</code> and not a <code>UnicodeDecodeError</code>. We can&rsquo;t encode a unicode object which contains characters outside of ascii range to ascii encoding.</p>
]]></content>
  </entry>
  
</feed>
